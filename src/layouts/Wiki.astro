---
import Base from "@layouts/Base.astro";
import Tree from "@components/tree/Tree.astro";
import { getCollection } from "astro:content";
import { Maybe, MaybeAsync } from "purify-ts";
import { collapse, type PageTree } from "@utils/tree";
import type { MarkdownHeading } from "astro";


interface Props {
  headings?: MarkdownHeading[];
  frontmatter: {
    title: string;
    icon?: string;
  };
  slug?: string;
  tree?: PageTree;
}

const { frontmatter, slug } = Astro.props;


function constructWikiTree(tree?: PageTree) {
  return MaybeAsync
    .liftMaybe(Maybe.fromNullable(tree))
    .alt(
      MaybeAsync(async () => await getCollection('wiki'))
        .map(collapse))
    .map(tree => ({
      tree,
      slug: Maybe.fromNullable(slug),
      prefix: Maybe.of("/wiki/")
    }));
}

const headings = Maybe.fromNullable(Astro.props.headings);
const pages = Astro.url.pathname.startsWith("/wiki/")
  ? await constructWikiTree(Astro.props.tree)
  : Maybe.empty();

const {title, icon} = frontmatter || {};

const classlist = [
  'wiki-article',
  ...icon ? ['has-icon', `icon-${icon}`] : []
];
---

<Base title={frontmatter.title}>
  <main class="wiki-main">
    <!-- Slide in/out for mobile -->
    <input id="wiki-aside-shown" type="checkbox" hidden/>

    <aside class="wiki-aside">
      <!-- Slide button -->
      <label class="wiki-aside__slider" for="wiki-aside-shown">
        <img class="wiki-icon" src="/static/svg/double-arrow.svg" width="24" height="24" />
      </label>
      <!-- Navigation tree -->
      <Tree heading="Personal Wiki" pages={pages} headings={headings} />
    </aside>

    <article class:list={classlist}>
      <heading class="markdown" >
        <h1 id="top">{title}</h1>
      </heading>
      <section class="wiki-article__markdown markdown">
        <slot />
      </section>
    </article>
  </main>
</Base>
