---
import Base from "./Base.astro";
import Entry from "@components/list/Entry.astro";
import { Temporal } from "@js-temporal/polyfill";


type Date = Temporal.ZonedDateTime;

interface Props {
  title: string;
  pages: Page[];
}

interface Page {
  title: string;
  date: Date;
  desc: string;
  path: string;
}

interface Sections {
  [year: string]: Page[];
}


function compare(a: Page, b: Page) {
  return Temporal.ZonedDateTime.compare(b.date, a.date);
}

const { title, pages } = Astro.props;

const yearly = pages
  .reduce<Sections>((acc, next) => {
    const year = next.date.year;
    (year in acc)
      ? acc[year].push(next)
      : acc[year] = [next];
    return acc;
  }, {});

const sections = Object.entries<Page[]>(yearly)
  .sort((a, b) => a[0] > b[0] ? -1 : 1)
  .map(([year, pages]) => ({ year, pages: pages.sort(compare) }));
---

<Base title={title}>
  <main class="page-list-main">
    <article class="page-list">
      <header class="markdown">
        <h1>{title}</h1>
      </header>
      {sections.map(({ year, pages }) => (
        <section class="page-list-year">
          <header class="page-list-year__header">
            <div class="fleuron-l">&#9753;</div>
            <h2>{year}</h2>
            <div class="fleuron-r">&#10087;</div>
          </header>
          {pages.map(page => <Entry {...page}/>)}
        </section>
      ))}
    </article>
  </main>
</Base>
