---
interface Props {
  headings: Array<{
    depth: number;
    slug: string;
    text: string;
  }>
}

type Heading = Props['headings'][number];
type Nested = Heading & { children?: Heading[] };

const { headings } = Astro.props;

function fold(headings: Heading[]) {
  const toc = [] as Nested[];
  const map = new Map<number, Nested>();
  for (const h of headings) {
    const heading = { ...h };
    map.set(heading.depth, heading);
    if (heading.depth === 2)
      toc.push(heading)
    else {
      const backref = map.get(heading.depth - 1)!;
      backref.children
        ? backref.children.push(heading)
        : backref.children = [heading];
    }
  }
  return toc;
}
---

<section class="p-toc">
  <h2>Content</h2>
  <nav id="TableOfContents">
    <ul>
    {fold(headings).map(heading => (
      <li>
        <a href={`#${heading.slug}`}>{heading.text}</a>
        {heading.children && (
          <ul>
            {heading.children?.map((child: any) => (
              <li><a href={`#${heading.slug}`}>{heading.text}</a></li>
            ))}
          </ul>
        )}
      </li>
    ))}
    </ul>
  </nav>
</section>
