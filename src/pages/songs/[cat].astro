---
import Base from "../../layouts/Base.astro";
import Header from '../../components/headers/Base.astro';
import { CollectionEntry, getCollection } from 'astro:content';
import { ALBUMS, getAllCats } from "../../utils/songs/data";


export async function getStaticPaths() {
  const songs = await getCollection('songs');
  const cats = getAllCats(songs);

  return [...cats].map(cat => ({
    params: {cat},
    props: { 
      songs: songs
        .filter(entry => cat in entry.data.album)
        .map(song => ({ frontmatter: song.data, slug: `/songs/${cat}/${song.slug}/` }))
    }
  }))
}

interface Props {
  songs: Array<{
    frontmatter: CollectionEntry<'songs'>['data'],
    slug: string,
  }>
}

const { cat } = Astro.params;
const { songs } = Astro.props;
const album = ALBUMS[cat!];
---

<Base>
  <main class="l-songs-cat">
    <article class="l-songs-cat__article">
      <Header title={`${cat} - ${album.title}`} />
      <div class="l-songs-cat__list">
        {songs.map(song => [
          <span>{song.frontmatter.album[cat!].track}</span>
          <a href={song.slug}>{song.frontmatter.title}</a>
        ])}
      </div>
    </article>
  </main>
</Base>
