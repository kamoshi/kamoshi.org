---
import Base from "@layouts/Base.astro";
import Song from "@components/markdown/Song.astro";
import Lyrics from "@components/markdown/Lyrics.astro";
import { CollectionEntry, getCollection } from "astro:content";
import { ALBUMS } from "@utils/songs/data";


export async function getStaticPaths() {
  return (await getCollection('songs'))
    .map(song => Object.keys(song.data.album)
      .map(cat => ({
        params: { circle: ALBUMS[cat].circle, cat, song: song.slug},
        props: { song, cat }
      })))
    .flat()
}


interface Props {
  cat: string;
  song: CollectionEntry<'songs'>;
}

const { cat, song } = Astro.props;

/** Other versions of this song */
const other = Object.keys(song.data.album)
  .filter(other => other != cat)
  .map(cat => ({ cat, title: ALBUMS[cat].title }));

const metadata = {
  ...song.data,
  ...song.data.album[cat],
  ...ALBUMS[cat],
  cat,
  other
}
---

<Base>
  <main class="l-song">
    <article class="l-song__page">
      <header class="p-header">
        <h1 class="p-header__heading">{song.data.title}</h1>
      </header>
      <Lyrics song={song.body} />
    </article>

    <aside class="l-song__aside">
      <Song metadata={metadata} />
    </aside>
  </main>
</Base>
